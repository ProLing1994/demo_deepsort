ROOT_DIR:=$(shell pwd)
TARGET:= ncnn_demo
TARGET_SOURCE = $(ROOT_DIR)/demo/demo.cpp

#CC		:= g++ 
#AR		:= ar
#CFLAGS	:= -g -W -Wall -std=c++11 -fpic -fopenmp -fno-strict-aliasing -traditional -Wno-reorder -Wno-char-subscripts
#INCLUDE	:= -I/home/workspace/RMAI/yuanhuan/code/demo_deepsort/release/deploy/include \
#		-I/home/workspace/RMAI/yuanhuan/code/eigen-git-mirror/build/install/include/eigen3 \
#		-I/home/workspace/RMAI/yuanhuan/code/ncnn/build/install/include \
#		`pkg-config --cflags opencv`
#STATIC_LIB:= /home/workspace/RMAI/yuanhuan/code/ncnn/build/install/lib/libncnn.a
#LIBS	+= $(STATIC_LIB) -L/home/workspace/RMAI/yuanhuan/code/demo_deepsort/release/deploy/lib -ldeepsort `pkg-config --libs opencv`

CC		:= arm-himix200-linux-g++ 
AR		:= arm-himix200-linux-ar
CFLAGS	:= -mcpu=cortex-a53 -mfloat-abi=softfp -mfpu=neon-vfpv4 -mno-unaligned-access -fno-aggressive-loop-optimizations \
		-W -Wall -O3 -std=c++11 -fpic -fopenmp -fno-strict-aliasing -traditional -Wno-reorder -Wno-char-subscripts
INCLUDE	:= -I/home/workspace/RMAI/yuanhuan/code/demo_deepsort/release/deploy/include \
		-I/home/workspace/RMAI/yuanhuan/code/eigen-git-mirror/build/install/include/eigen3 \
		-I/home/workspace/RMAI/yuanhuan/code/NCNN20180830/ \
		-I/home/workspace/RMAI/third_party/opencv2411/include/opencv \
		-I/home/workspace/RMAI/third_party/opencv2411/include/opencv2 \
		-I/home/workspace/RMAI/third_party/opencv2411/include/ 
STATIC_LIB:= /home/workspace/RMAI/third_party/NCNN20180830/lib/libncnn_himix200.a \
		/home/workspace/RMAI/third_party/NCNN20180830/lib/libncnn_amba.a \
		/home/workspace/RMAI/third_party/opencv2411/lib_himix200/libopencv_objdetect.a \
		/home/workspace/RMAI/third_party/opencv2411/lib_himix200/libopencv_highgui.a \
		/home/workspace/RMAI/third_party/opencv2411/lib_himix200/libopencv_video.a \
		/home/workspace/RMAI/third_party/opencv2411/lib_himix200/libopencv_imgproc.a \
		/home/workspace/RMAI/third_party/opencv2411/lib_himix200/libopencv_core.a \
		/home/workspace/RMAI/third_party/opencv2411/lib_himix200/libzlib.a \
		/home/workspace/RMAI/third_party/opencv2411/lib_himix200/liblibjpeg.a \
		/home/workspace/RMAI/third_party/opencv2411/lib_himix200/liblibpng.a \
		/home/workspace/RMAI/third_party/opencv2411/lib_himix200/liblibjasper.a

LIBS	+= $(STATIC_LIB) -L/home/workspace/RMAI/yuanhuan/code/demo_deepsort/release/deploy/lib -ldeepsort 

SRC_DIR	+= $(ROOT_DIR)/net
SRC_FILE_CPP+=$(foreach d, $(SRC_DIR), $(wildcard $(addprefix $(d)\/*, .cpp))) 
INCLUDE_FILE+=$(foreach d, $(SRC_DIR), $(wildcard $(addprefix $(d)\/*, .h))) 
SOURCE  += $(TARGET_SOURCE) $(SRC_FILE_CPP)

OBJS    := $(patsubst %.c, %.o, $(patsubst %.cpp, %.o, $(SOURCE)))

ifndef PREFIX
	RELEASE_DIR:=${ROOT_DIR}/release
else
	RELEASE_DIR:=${PREFIX}
endif

ifeq ($(suffix $(TARGET)), .a)
	IS_LIB:=TURE
endif

ifeq ($(suffix $(TARGET)), .so)
	IS_LIB:=TURE
endif

.PHONY:all
all: $(TARGET)

$(TARGET): $(OBJS)
ifeq ($(suffix $(TARGET)), .a) 
	$(AR) -rc $@ $(OBJS) $(LIBS)
else
ifeq ($(suffix $(TARGET)), .so) 
	$(CC) $(CFLAGS) -shared -fpic -o $@ $(OBJS) $(LIBS)
else
	$(CC) $(CFLAGS) -o $@ $(OBJS) $(LIBS)
endif
endif
	@echo ${TARGET}
	@echo ${RELEASE_DIR}
ifeq ($(IS_LIB), TURE) 
	@mkdir -p ${RELEASE_DIR}/lib
	@cp -f $(TARGET) ${RELEASE_DIR}/lib
	@mkdir -p ${RELEASE_DIR}/include
	@for include_file in $(INCLUDE_FILE); do \
		echo $$include_file; \
		cp -f $$include_file ${RELEASE_DIR}/include; \
	done
else
	@mkdir -p ${RELEASE_DIR}/bin
	@cp -f $(TARGET) ${RELEASE_DIR}/bin
endif	

%.o : %.cpp
	$(CC) $(CFLAGS) $(INCLUDE) -c -o $@ $<

.PHONY:clean
clean:
	rm -f $(OBJS)
	rm -f $(TARGET)
	rm -rf ${RELEASE_DIR}/bin
	rm -rf ${RELEASE_DIR}/lib
	rm -rf ${RELEASE_DIR}/include